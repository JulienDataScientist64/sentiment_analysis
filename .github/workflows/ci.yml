name: CI Dev

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Récupérer le code source
      - uses: actions/checkout@v3

      # Étape 2 : Configurer Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Étape 3 : Installer Poetry
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      # Étape 4 : Installer les dépendances avec Poetry
      - name: Install dependencies
        run: poetry install --no-root

      # Étape 5 : Lancer les tests
      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: poetry run pytest

      # Étape 6 : Se connecter à Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.AZURE_PASSWORD }}" | docker login -u "${{ secrets.AZURE_USERNAME }}" --password-stdin

      # Étape 7 : Construire l'image Docker
      - name: Build Docker image
        run: docker build -t ${{ secrets.AZURE_USERNAME }}/${{ secrets.AZURE_APP_NAME }} .

      # Étape 8 : Pousser l'image Docker sur Docker Hub
      - name: Push Docker image
        run: docker push ${{ secrets.AZURE_USERNAME }}/${{ secrets.AZURE_APP_NAME }}:latest

      # Étape 9 : Déployer sur Azure
      - name: Deploy to Azure
        run: |
          az webapp config container set \
            --name ${{ secrets.AZURE_APP_NAME }} \
            --resource-group sentiment-analysis-rg \
            --docker-custom-image-name ${{ secrets.AZURE_USERNAME }}/${{ secrets.AZURE_APP_NAME }}:latest
