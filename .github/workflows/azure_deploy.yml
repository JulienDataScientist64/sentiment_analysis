name: CI Dev

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Récupérer le code source
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Configurer Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Étape 3 : Installer Poetry
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      # Étape 4 : Installer les dépendances avec Poetry
      - name: Install dependencies
        run: poetry install --no-root

      # Étape 5 : Lancer les tests avec pytest
      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: poetry run pytest

      # Étape 6 : Se connecter à Azure CLI
      - name: Log in to Azure CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Étape 7 : Construire l'image Docker
      - name: Build Docker image
        run: docker build -t ${{ secrets.AZURE_APP_NAME }} .

      # Étape 8 : Pousser l'image Docker sur Docker Hub
      - name: Push Docker image to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.AZURE_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.AZURE_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
          docker tag ${{ secrets.AZURE_APP_NAME }} $DOCKER_USERNAME/${{ secrets.AZURE_APP_NAME }}:latest
          docker push $DOCKER_USERNAME/${{ secrets.AZURE_APP_NAME }}:latest

      # Étape 9 : Déployer l'image Docker sur Azure App Service
      - name: Deploy to Azure App Service
        run: |
          az webapp config container set \
            --name ${{ secrets.AZURE_APP_NAME }} \
            --resource-group sentiment-analysis-rg \
            --container-image-name $DOCKER_USERNAME/${{ secrets.AZURE_APP_NAME }}:latest

      # Étape 10 : Déconnexion de Docker et Azure CLI
      - name: Logout from Docker and Azure CLI
        run: |
          docker logout
          az logout
